version: "3"

services:
  gateway:
    image: codecov/self-hosted-gateway:latest-stable
    environment:
      CODECOV_API_HOST: example.domain.com
      CODECOV_API_PORT: 443
      CODECOV_API_SCHEME: https
      CODECOV_API_HOST_HEADER: example.domain.com
      CODECOV_IA_HOST: example.domain.com
      CODECOV_IA_PORT: 443
      CODECOV_IA_SCHEME: https
      CODECOV_IA_HOST_HEADER: example.domain.com
      CODECOV_DEFAULT_HOST: example.domain.com
      CODECOV_DEFAULT_PORT: 443
      CODECOV_DEFAULT_SCHEME: https
      CODECOV_DEFAULT_HOST_HEADER: example.domain.com
      #CODECOV_GATEWAY_PROXY_MODE_ENABLED: true
      #CODECOV_GATEWAY_CHROOT_DISABLED: true
      #CODECOV_GATEWAY_SSL_ENABLED: true
    ports:
      - "9080:8080"
      - "9404:8404"

  frontend:
    image: codecov/self-hosted-frontend:latest-stable #note: this is for setup purposes only, be sure to pin to the latest release from our changelog: https://docs.codecov.io/changelog
    environment:
      - CODECOV_BASE_HOST=example.domain.com
      - CODECOV_API_HOST=example.domain.com
      - CODECOV_IA_HOST=example.domain.com
      - CODECOV_SCHEME=https
    volumes:
      - ./config:/config
    ports:
      - "8080:8080"
    networks:
      - codecov

  api:
    image: codecov/self-hosted-api:latest-stable
    #image: codecov/enterprise-api:latest-stable
    volumes:
      - ./config:/config
    networks:
      - codecov
    depends_on:
      - minio
      - timescale
      - postgres
      - redis
    environment:
      - RUN_ENV=ENTERPRISE
      - SETUP__TIMESERIES__ENABLED=${TIMESERIES_ENABLED-true}
    ports:
      - "8000:8000"
    
  worker:
    image: codecov/self-hosted-worker:latest-stable #note: this is for setup purposes only, be sure to pin to the latest release from our changelog: https://docs.codecov.io/changelog
    environment:
      - RUN_ENV=ENTERPRISE
    volumes:
      - ./config:/config
      - archive-volume:/archive
    networks:
      - codecov
    depends_on:
      - minio
      - redis
      - postgres
      - timescale

  redis:
    image: redis:6-alpine
    volumes:
      - redis-volume:/data
    networks:
      - codecov
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - codecov

  timescale:
    image: timescale/timescaledb-ha:pg14-latest
    environment:
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - timescale-volume:/var/lib/postgresql/data
    ports:
      - "8432:5432"
    networks:
      - codecov

  minio:
    image: minio/minio:RELEASE.2020-04-15T00-39-01Z
    command: server /export
    ports:
      - "${CODECOV_MINIO_PORT-9000}:9000"
    environment:
      - MINIO_ACCESS_KEY=codecov-default-key
      - MINIO_SECRET_KEY=codecov-default-secret
    volumes:
      - archive-volume:/export
    networks:
      - codecov

volumes:
  postgres-volume:
  timescale-volume:
  redis-volume:
  archive-volume:

networks:
  codecov:
    driver: bridge